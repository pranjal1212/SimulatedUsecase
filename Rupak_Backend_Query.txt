1. Created one-pass file for testing in Athena ----------

CREATE EXTERNAL TABLE `gym.rupak`(
  `customer_id` string, 
  `first_name` string, 
  `last_name` string, 
  `birth_dt` string, 
  `gym_id` string, 
  `category_type` string, 
  `city` string, 
  `state` string, 
  `country` string, 
  `pincode` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY ',' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
  's3://aws-glue-bucket11/data-store/gym/single_pass_files/Rupak/'
TBLPROPERTIES ('transient_lastDdlTime'='1680009065'
  );
  
select * from rupak;


===========================================================================================================================================================


2. Finding duplicates from individual onepass file in Athena ----------

SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT(*) AS record_count
FROM rupak AS r1
WHERE EXISTS (
    SELECT 1
    FROM rupak AS r2
    WHERE r1.first_name = r2.first_name
    AND r1.last_name = r2.last_name
    AND r1.category_type = r2.category_type
    AND r1.city = r2.city
    AND r1.state = r2.state
    AND r1.country = r2.country
    AND r1.pincode = r2.pincode
    AND r1.customer_id != r2.customer_id
)
GROUP BY first_name, last_name, category_type, city, state, country, pincode;


===========================================================================================================================================================


3. Finding duplicates from individual master file in Athena ----------

SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT(*) AS record_count
FROM master AS m1
WHERE EXISTS (
    SELECT 1
    FROM master AS m2
    WHERE m1.first_name = m2.first_name
    AND m1.last_name = m2.last_name
    AND m1.category_type = m2.category_type
    AND m1.city = m2.city
    AND m1.state = m2.state
    AND m1.country = m2.country
    AND m1.pincode = m2.pincode
    AND m1.customer_id != m2.customer_id
)
GROUP BY first_name, last_name, category_type, city, state, country, pincode;


===========================================================================================================================================================


4. Finding duplicates from master and one-pass in one go in Athena ----------

CREATE TABLE duplicates_counts AS
SELECT first_name, last_name, category_type, city, state, country, pincode,
master_duplicates_count + rupak_duplicates_count AS total_duplicates_count
FROM (
SELECT m.first_name, m.last_name, m.category_type, m.city, m.state, m.country, m.pincode,
COALESCE(master_duplicates_count, 0) AS master_duplicates_count,
COALESCE(rupak_duplicates_count, 0) AS pranjal_duplicates_count
FROM (
SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT() AS master_duplicates_count
FROM master
GROUP BY first_name, last_name, category_type, city, state, country, pincode
HAVING COUNT() > 1
) AS m
FULL OUTER JOIN (
SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT() AS rupak_duplicates_count
FROM rupak
GROUP BY first_name, last_name, category_type, city, state, country, pincode
HAVING COUNT() > 1
) AS r
ON m.first_name = r.first_name
AND m.last_name = r.last_name
AND m.category_type = r.category_type
AND m.city = r.city
AND m.state = r.state
AND m.country = r.country
AND m.pincode = r.pincode
) AS combined_duplicates;


===========================================================================================================================================================


3. Solved the issue for existing data using below query in Athena AWS 
   Created a new table by providing same customer id to the duplicate data with different gym id ----------

CREATE TABLE updated_master_table AS
SELECT
   CASE
       WHEN COUNT(*) OVER(PARTITION BY first_name, last_name, birth_dt, category_type, city, state, country, pincode) > 1
       THEN CONCAT('', MIN(customer_id) OVER(PARTITION BY first_name, last_name, birth_dt, category_type, city, state, country, pincode))
       ELSE customer_id
   END AS customer_id,
   first_name,
   last_name,
   birth_dt,
   gym_id,
   category_type,
   city,
   state,
   country,
   pincode
FROM
   rupak;


===========================================================================================================================================================
