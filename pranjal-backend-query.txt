1) Create new table for testing in aws athena
CREATE EXTERNAL TABLE `pranjal`(
  `customer_id` bigint, 
  `first_name` string, 
  `last_name` string, 
  `date_of_birth` string, 
  `gym_id` string, 
  `category_type` string, 
  `city` string, 
  `state` string, 
  `country` string, 
  `pincode` bigint)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY ',' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
  's3://aws-glue-bucket11/data-store/gym/single_pass_files/Pranjal';
select * from pranjal;

2) Find out the number of duplicate datas in master table and pranjal table in athena using below query:
SELECT first_name, 
last_name, 
date_of_birth, 
category_type, 
city, 
state, 
country, 
pincode, 
COUNT(*) AS duplicate_count
FROM pranjal
GROUP BY 
first_name, 
last_name, 
date_of_birth, 
category_type, 
city, 
state, 
country, 
pincode
HAVING 
COUNT(*) > 1;



CREATE TABLE duplicates_counts1 AS
SELECT first_name, last_name, category_type, city, state, country, pincode,
master_duplicates_count + pranjal_duplicates_count AS total_duplicates_count
FROM (
SELECT m.first_name, m.last_name, m.category_type, m.city, m.state, m.country, m.pincode,
COALESCE(master_duplicates_count, 0) AS master_duplicates_count,
COALESCE(pranjal_duplicates_count, 0) AS pranjal_duplicates_count
FROM (
SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT() AS master_duplicates_count
FROM master
GROUP BY first_name, last_name, category_type, city, state, country, pincode
HAVING COUNT() > 1
) AS m
FULL OUTER JOIN (
SELECT first_name, last_name, category_type, city, state, country, pincode, COUNT() AS pranjal_duplicates_count
FROM pranjal
GROUP BY first_name, last_name, category_type, city, state, country, pincode
HAVING COUNT() > 1
) AS p
ON m.first_name = p.first_name
AND m.last_name = p.last_name
AND m.category_type = p.category_type
AND m.city = p.city
AND m.state = p.state
AND m.country = p.country
AND CAST(m.pincode as varchar) = p.pincode
) AS combined_duplicates;

3) Solved the issue for existing data using below query in Athena aws 
Created a new table by providing same customer id to the duplicate data with different gym id.

CREATE TABLE updated_master_table AS
SELECT
   CASE
       WHEN COUNT(*) OVER(PARTITION BY first_name, last_name, birth_dt, category_type, city, state, country, pincode) > 1
       THEN CONCAT('', MIN(customer_id) OVER(PARTITION BY first_name, last_name, birth_dt, category_type, city, state, country, pincode))
       ELSE customer_id
   END AS customer_id,
   first_name,
   last_name,
   birth_dt,
   gym_id,
   category_type,
   city,
   state,
   country,
   pincode
FROM
   pranjal;